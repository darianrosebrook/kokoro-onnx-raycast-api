{
  "timestamp": "2025-10-31T00:17:58.182Z",
  "context": "commit",
  "files_scoped": 48,
  "warnings": [
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'This document describes the additional performance monitoring and testing framework implemented for the Kokoro TTS API. The framework provides extensive monitoring, alerting, regression detection, predictive caching, and load testing capabilities.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/ADVANCED_MONITORING.md",
      "line": 5,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Logging**: all relevant alerts logged with timestamps'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/ADVANCED_MONITORING.md",
      "line": 224,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Provenance Tracking**: all relevant monitoring data included in audit trails'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/ADVANCED_MONITORING.md",
      "line": 237,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Run all relevant quality gates including additional monitoring'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/ADVANCED_MONITORING.md",
      "line": 241,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Status**: ✅ Production Ready with additional Monitoring'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/ADVANCED_MONITORING.md",
      "line": 374,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'The project has implemented a **99/100 trust score**, exceeding the 80/100 target for CAWS compliance.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_IMPLEMENTATION.md",
      "line": 9,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Current Status**: Containerized tests implemented ✅'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_IMPLEMENTATION.md",
      "line": 65,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Run all relevant quality gates'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_IMPLEMENTATION.md",
      "line": 132,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'The GitHub Actions workflow automatically runs all relevant quality gates:'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_IMPLEMENTATION.md",
      "line": 166,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Performance**: all relevant budgets met'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_IMPLEMENTATION.md",
      "line": 198,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '5. **Deploy**: CI/CD validates all relevant gates'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_IMPLEMENTATION.md",
      "line": 267,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Performance**: Meet all relevant budget requirements'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_IMPLEMENTATION.md",
      "line": 273,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Run all relevant quality gates'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_TOOLS_REFERENCE.md",
      "line": 28,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'make caws-gates        # Run all relevant quality gates'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_TOOLS_REFERENCE.md",
      "line": 117,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'python3 scripts/simple_gates.py all relevant --tier 2 --profile backend-api'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_TOOLS_REFERENCE.md",
      "line": 139,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'caws iterate --current-state=\"Feature implemented, ready for review\"'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_TOOLS_REFERENCE.md",
      "line": 234,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **A3:** Service ready time <10 seconds ✅'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_TOOLS_REFERENCE.md",
      "line": 245,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **A6:** Trust score ≥80/100, all relevant tests pass'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_TOOLS_REFERENCE.md",
      "line": 248,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '2. **Run Gates Incrementally:** Test individual gates before running all relevant'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_TOOLS_REFERENCE.md",
      "line": 344,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '🧪' in '#### 🧪 Testing & Analysis'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/CAWS_TOOLS_REFERENCE.md",
      "line": 80,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '### 2. implemented CAWS Directory Structure'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/001-caws-compliance-implementation.md",
      "line": 35,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- all relevant required schemas and policies in place'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/001-caws-compliance-implementation.md",
      "line": 39,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Mutation Testing**: Implemented with fallback support for environments without mutmut'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/001-caws-compliance-implementation.md",
      "line": 42,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- implemented audit trail for AI-generated code'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/001-caws-compliance-implementation.md",
      "line": 53,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Auditability**: implemented provenance tracking'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/001-caws-compliance-implementation.md",
      "line": 69,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Tool Availability**: Some tools may not be available in all relevant environments'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/001-caws-compliance-implementation.md",
      "line": 79,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Fallback Options**: Implemented fallback mechanisms for missing tools'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/001-caws-compliance-implementation.md",
      "line": 84,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Documentation**: extensive documentation for all relevant processes'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/001-caws-compliance-implementation.md",
      "line": 87,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Audit AI-generated code** with implemented traceability'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/003-provenance-tracking-system.md",
      "line": 9,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Quality Gate Integration**: Results from all relevant quality gates'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/003-provenance-tracking-system.md",
      "line": 64,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **implemented Audit Trail**: Full traceability of AI-generated code'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/003-provenance-tracking-system.md",
      "line": 71,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Quality Gates**: Results from all relevant quality gates'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/003-provenance-tracking-system.md",
      "line": 107,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '3. **Completeness Check**: Ensure all relevant required fields present'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/003-provenance-tracking-system.md",
      "line": 134,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Audit Logging**: Log all relevant provenance operations'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/adr/003-provenance-tracking-system.md",
      "line": 154,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Status:** ✅ Ready to install'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/deployment/macos-launch-agent-guide.md",
      "line": 3,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Service Ready:** ~10 seconds after login'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/deployment/macos-launch-agent-guide.md",
      "line": 157,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '- ⚠️ Must restart to apply changes'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/deployment/macos-launch-agent-guide.md",
      "line": 244,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '- ⚠️ Less visible debugging'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/deployment/macos-launch-agent-guide.md",
      "line": 245,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Status:** ✅ Ready'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/deployment/menu-bar-indicator-guide.md",
      "line": 3,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '- ⚠️ **Warning**: Service running but unhealthy'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/deployment/menu-bar-indicator-guide.md",
      "line": 13,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '- **⚠️ Yellow**: Service running but issues detected'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/deployment/menu-bar-indicator-guide.md",
      "line": 27,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '- **⚠️ Kokoro** - Service running but unhealthy'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/deployment/menu-bar-indicator-guide.md",
      "line": 73,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Status**: operational with optimized configuration'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/deployment/production-guide.md",
      "line": 4,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '### ** Performance Targets (implemented)**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/deployment/production-guide.md",
      "line": 17,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '| Metric | Target | implemented | Status |'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/deployment/production-guide.md",
      "line": 19,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Should be: CPUOnly (not all relevant or CPUAndGPU)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/deployment/production-guide.md",
      "line": 181,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- [ ] Cold start mitigation implemented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/deployment/production-guide.md",
      "line": 230,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Hypothesis:** Model sessions not properly released'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/critical-concurrent-issue.md",
      "line": 39,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Problem:** Sessions not properly released between requests'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/critical-concurrent-issue.md",
      "line": 107,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'implemented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/critical-concurrent-issue.md",
      "line": 171,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '-  all relevant requests should be tracked in monitoring'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/critical-concurrent-issue.md",
      "line": 205,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Broken**: all relevant subsequent requests return 2 bytes of zeros (`00 00`)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/model-session-corruption-fix.md",
      "line": 17,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Sessions**: DualSessionManager shows all relevant sessions unavailable after first use'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/model-session-corruption-fix.md",
      "line": 19,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'The Kokoro TTS model (loaded via ONNX Runtime with CoreML provider) becomes corrupted after its first successful inference, causing it to generate only silence for all relevant subsequent requests.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/model-session-corruption-fix.md",
      "line": 24,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '3. **Dual Session Manager Failure**: all relevant session types (ANE/GPU/CPU) become unavailable'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/model-session-corruption-fix.md",
      "line": 29,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Force implemented session destruction'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/model-session-corruption-fix.md",
      "line": 43,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '2. **Enhanced session destruction** - Force implemented session recreation'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/model-session-corruption-fix.md",
      "line": 94,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Audio Quality**: all relevant requests return >40KB of valid audio data'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/model-session-corruption-fix.md",
      "line": 126,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- Remove all relevant `console.log` statements'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/performance-logging-rebuild-plan.md",
      "line": 72,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- Remove all relevant console.log statements'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/performance-logging-rebuild-plan.md",
      "line": 83,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Remove all relevant old performance logging'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/performance-logging-rebuild-plan.md",
      "line": 114,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Consistent error tracking**: all relevant errors properly categorized and reported'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/performance-logging-rebuild-plan.md",
      "line": 217,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- [ ] New tracking systems deployed and functional'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/performance-logging-rebuild-plan.md",
      "line": 242,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- [ ] all relevant old logging systems removed'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/performance-logging-rebuild-plan.md",
      "line": 248,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- [ ] Consistent log format across all relevant components'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/performance-logging-rebuild-plan.md",
      "line": 249,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- [ ] all relevant errors properly tracked'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/performance-logging-rebuild-plan.md",
      "line": 251,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- [ ] Performance dashboard operational'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/performance-logging-rebuild-plan.md",
      "line": 254,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Root cause:** Session resources not released between requests'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/session-resource-leak-fix.md",
      "line": 13,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '\"\"\"Clean up all relevant sessions and resources.\"\"\"'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/session-resource-leak-fix.md",
      "line": 53,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Force release all relevant session locks'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/session-resource-leak-fix.md",
      "line": 57,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **User Impact:** implemented failure of concurrent/sequential requests'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/session-resource-leak-fix.md",
      "line": 127,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Immediate:** all relevant concurrent requests now work properly'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/session-resource-leak-fix.md",
      "line": 131,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'The session resource leak that caused **implemented system failure after the first request** has been fixed through proper resource cleanup in the DualSessionManager.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/session-resource-leak-fix.md",
      "line": 201,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Production Ready:** System operates consistently across request sequences with extensive monitoring and emergency recovery capabilities.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/session-resource-leak-fix.md",
      "line": 207,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '> **Status:** ✅ **COMPLETED** - Full system implemented and ready for testing'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-benchmark-system-implementation.md",
      "line": 3,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'We have successfully implemented a extensive TTS performance benchmarking and optimization system that addresses the TTFA (Time to First Audio) issues and provides full-spectrum performance tracking across the all relevant TTS pipeline.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-benchmark-system-implementation.md",
      "line": 9,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'We have successfully implemented a extensive TTS performance benchmarking and optimization system that addresses the TTFA (Time to First Audio) issues and provides full-spectrum performance tracking across the all relevant TTS pipeline.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-benchmark-system-implementation.md",
      "line": 9,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Incremental Audio Generation**: Streams audio as it's generated instead of waiting for implemented segments'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-benchmark-system-implementation.md",
      "line": 26,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- all relevant existing functionality preserved'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-benchmark-system-implementation.md",
      "line": 170,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '3. **Full Spectrum Benchmark Test** - implemented system analysis'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-benchmark-system-implementation.md",
      "line": 196,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '1. **User Experience**: Sub-second audio delivery for all relevant text lengths'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-benchmark-system-implementation.md",
      "line": 334,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '### Immediate Actions (Ready to Deploy)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-benchmark-system-implementation.md",
      "line": 344,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'We have successfully implemented a extensive TTS performance optimization and benchmarking system that:'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-benchmark-system-implementation.md",
      "line": 407,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '✅ **Provides Full Spectrum Analysis** - extensive performance measurement across all relevant system components'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-benchmark-system-implementation.md",
      "line": 410,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '✅ **Supports Production Deployment** - Ready for immediate use with extensive testing'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-benchmark-system-implementation.md",
      "line": 414,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'The system is now ready to dramatically improve TTFA performance and provide ongoing optimization insights for the TTS pipeline. The benchmark suite will help track progress toward the 800ms TTFA target and identify optimization opportunities across the all relevant system spectrum.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-benchmark-system-implementation.md",
      "line": 416,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'The system is now ready to dramatically improve TTFA performance and provide ongoing optimization insights for the TTS pipeline. The benchmark suite will help track progress toward the 800ms TTFA target and identify optimization opportunities across the all relevant system spectrum.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-benchmark-system-implementation.md",
      "line": 416,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '> **Status:** Planning implemented - Ready for Implementation'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-optimization-plan.md",
      "line": 3,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '1. **Audio Generation Delay**: Waiting for implemented audio segment before streaming'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-optimization-plan.md",
      "line": 20,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- Add chunk-based streaming instead of waiting for implemented segment'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-optimization-plan.md",
      "line": 63,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- Process smaller chunks (50ms instead of implemented segments)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-optimization-plan.md",
      "line": 66,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Stream first chunk immediately when ready'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-optimization-plan.md",
      "line": 112,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Stream subsequent chunks as they implemented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-optimization-plan.md",
      "line": 116,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '2. **Segment Cache**: Cache implemented audio segments'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-optimization-plan.md",
      "line": 314,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Error Rate**: <1% for all relevant requests'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-optimization-plan.md",
      "line": 348,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Voice Coverage**: all relevant available voices'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-optimization-plan.md",
      "line": 352,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- all relevant segments: 2 (improved from previous longer segments)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-progress-update.md",
      "line": 34,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- Chunks implemented: 497 (ultra-small chunking working)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-progress-update.md",
      "line": 35,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '** Major Progress implemented**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-progress-update.md",
      "line": 197,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- ✅ Eliminated all relevant streaming errors'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-progress-update.md",
      "line": 200,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- ✅ implemented 3.8x TTFA improvement (8371ms → 2188ms)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/implementation/ttfa-progress-update.md",
      "line": 201,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'make caws-gates        # Run all relevant gates'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_MCP_QUALITY_GATES_EXPLANATION.md",
      "line": 59,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'python3 scripts/simple_gates.py all relevant --tier 2 --profile backend-api'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_MCP_QUALITY_GATES_EXPLANATION.md",
      "line": 69,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'python3 scripts/simple_gates.py all relevant --tier 2 --profile backend-api'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_MCP_QUALITY_GATES_EXPLANATION.md",
      "line": 155,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- all relevant mutations: 10'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 46,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- all relevant quality gates should run in `.venv`'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 105,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '2. Activate venv for all relevant gates'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 160,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '- ⚠️ Policy file not found (using defaults)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 22,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '- ⚠️ Migration recommended to multi-spec format'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 23,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '### ⚠️ 2. Static Analysis'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 25,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '- **Status:** ⚠️ PARTIAL'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 26,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '### ⚠️ 5. Contract Tests'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 51,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '- **Status:** ⚠️ SKIPPED'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 52,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '### ⚠️ 6. Integration Tests'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 56,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '- **Status:** ⚠️ SKIPPED'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 57,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '### ⚠️ 7. Performance Tests'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 61,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '- **Status:** ⚠️ PARTIAL'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 62,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '### ⚠️ What Needs Attention'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 75,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '1. ⚠️ **Unit Tests:** 15 failures, 2% coverage'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 76,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '2. ⚠️ **Python Dependencies:** Need to use venv for testing tools'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 77,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '3. ⚠️ **Contract Tests:** Not executed'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 78,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '4. ⚠️ **Integration Tests:** Not executed'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 79,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '5. ⚠️ **Performance Tests:** Not executed'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RESULTS.md",
      "line": 80,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# CAWS Quality Gates Run MCP Tool - implemented Documentation'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RUN_DOCUMENTATION.md",
      "line": 1,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'The `caws_quality_gates_run` MCP tool runs operational quality gates to enforce code quality standards. It checks for naming conventions, code freeze compliance, duplication, god objects, and documentation quality.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RUN_DOCUMENTATION.md",
      "line": 12,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- Default: all relevant gates'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RUN_DOCUMENTATION.md",
      "line": 26,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '// Run all relevant gates'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RUN_DOCUMENTATION.md",
      "line": 121,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Run all relevant gates'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RUN_DOCUMENTATION.md",
      "line": 149,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '| `0` | all relevant gates passed (or warnings only in non-CI mode) |'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RUN_DOCUMENTATION.md",
      "line": 259,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- `docs/CAWS_TOOLS_REFERENCE.md` - implemented CAWS tools reference'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RUN_DOCUMENTATION.md",
      "line": 393,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '⚠️  Found 3 instances of code duplication'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RUN_DOCUMENTATION.md",
      "line": 179,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '⚠️  Duplication: WARNINGS (3 instances)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CAWS_QUALITY_GATES_RUN_DOCUMENTATION.md",
      "line": 189,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'max_total_insertions: 500    # all relevant lines added across all relevant files'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CODE_FREEZE_REVIEW.md",
      "line": 29,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **all relevant Addition:** +5,824 lines (budget: 500)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CODE_FREEZE_REVIEW.md",
      "line": 70,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Rule:** all relevant additions limited to 500 lines, per-file limited to 300 lines'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CODE_FREEZE_REVIEW.md",
      "line": 72,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Allow all relevant changes (no freeze)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CODE_FREEZE_REVIEW.md",
      "line": 90,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'blocked_commit_types: []  # Allow all relevant commit types'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/CODE_FREEZE_REVIEW.md",
      "line": 102,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '1. **Unified Architecture**: all relevant benchmarks use same core engine'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-refactoring-summary.md",
      "line": 120,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '2. M-series suite implemented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-refactoring-summary.md",
      "line": 132,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- Ensure all relevant benchmarks align with current architecture'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 21,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Status:** ✅ Current, well-structured, operational'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 32,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- References `TTFABenchmarkSuite` which may not be largely implemented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 69,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- References `ProviderBenchmarkSuite` which may not be largely implemented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 71,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Recommendation:** **REVIEW & implemented** - Keep structure but ensure all relevant dependencies are implemented.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 74,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Recommendation:** **REVIEW & implemented** - Keep structure but ensure all relevant dependencies are implemented.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 74,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Recommendation:** **implemented IMPLEMENTATION** - This module should be largely implemented to support API endpoints.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 87,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- Need to verify if largely implemented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 120,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Recommendation:** **implemented DEPENDENCIES** - implemented the referenced modules to make endpoints functional.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 176,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- [ ] Check if `TTFABenchmarkSuite` exists and is implemented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 218,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- [ ] Test all relevant benchmark scripts to identify broken dependencies'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 220,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '2. **implemented API Benchmark Modules**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 241,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- [ ] implemented `streaming_benchmark.py` suite runner'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 243,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- [ ] Ensure `comprehensive_benchmark.py` works with all relevant dependencies'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 245,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- [ ] Unified artifact format across all relevant benchmarks'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 249,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- [ ] implemented benchmark documentation'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 281,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '2. **implemented provider benchmark** - Replace mock data with real provider comparison'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 299,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- ✅ all relevant outdated benchmarks identified and documented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 313,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- ✅ extensive benchmark suite operational'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 323,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '| `comprehensive_benchmark.py` | ⚠️ | 70% | API | implemented |'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 343,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '### ⚠️ **Incomplete or Needs Review**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 63,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '#### 2. `api/performance/benchmarks/comprehensive_benchmark.py` ⚠️'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 65,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '**Status:** ⚠️ Orchestrates other benchmarks but some dependencies incomplete'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 66,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '#### 3. `api/performance/benchmarks/ttfa_benchmark.py` ⚠️'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 78,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '**Status:** ⚠️ Incomplete implementation (only shows ~140 lines)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 79,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '#### 4. `api/performance/benchmarks/streaming_benchmark.py` ⚠️'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 91,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '**Status:** ⚠️ Basic implementation, needs enhancement'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 92,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '#### 5. `api/performance/benchmarks/provider_benchmark.py` ⚠️'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 104,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '**Status:** ⚠️ Returns mock data, not functional'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 105,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '#### 6. `api/performance/benchmarks/full_spectrum_benchmark.py` ⚠️'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 116,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '**Status:** ⚠️ Exists but needs verification'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 117,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '#### 10. `api/routes/benchmarks.py` ⚠️'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 168,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '**Status:** ⚠️ References incomplete modules'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 169,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '| `comprehensive_benchmark.py` | ⚠️ | 70% | API | implemented |'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 343,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '| `ttfa_benchmark.py` | ⚠️ | 60% | API | implemented |'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 344,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '| `streaming_benchmark.py` | ⚠️ | 65% | API | Enhance |'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 345,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Emoji usage detected: '⚠' in '| `full_spectrum_benchmark.py` | ⚠️ | ?? | Unknown | Review |'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/benchmark-suite-analysis.md",
      "line": 347,
      "rule": "EMOJI_USAGE",
      "suggested_fix": "Remove emoji or use approved emojis only (⚠️, ✅, 🚫)"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Status**: operational with extensive optimization'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 4,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '### **✅ all relevant P1 INVESTIGATIONS COMPLETED**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 8,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'We have successfully completed all relevant P1 investigation priorities and implemented **operational status** with excellent performance metrics:'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 10,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'We have successfully completed all relevant P1 investigation priorities and implemented **operational status** with excellent performance metrics:'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 10,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '| Metric | Target | implemented | Improvement |'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 14,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **CoreML all relevant/CPUAndGPU**: implemented failure (503 errors, server crashes)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 26,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **CoreML all relevant/CPUAndGPU**: implemented failure (503 errors, server crashes)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 26,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Chunk generation**: Excellent across all relevant sizes (0.003-0.005ms median gaps)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 36,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Provider selection logic**: Working correctly across all relevant text lengths'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 46,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Cold start pattern**: Consistent ~3-4 second penalty across all relevant configurations'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 47,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '##  **Production Deployment Ready**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 58,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '4. **Investigation Summary**: `docs/optimization/investigation-summary-2025-08-17.md` - implemented investigation results'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 74,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **First request**: ~4 seconds (consistent across all relevant configurations)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 80,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Mitigation**: Session warming and cache optimization implemented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 83,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **CPU Provider**: Consistent, reliable performance across all relevant text lengths'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 86,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **CoreML Provider**: Severe initialization issues and hangs with all relevant/CPUAndGPU'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 87,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Streaming stability**: Excellent chunk delivery across all relevant concurrency levels'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 98,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '##  **Performance Improvements implemented**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 100,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '✅ **Completed all relevant P1 investigations**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 163,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '✅ **implemented operational status**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 165,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '✅ **Documented all relevant findings and recommended practices**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 167,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Production**: Ready for deployment'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 181,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '##  **Ready for Production**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 183,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'The Kokoro TTS system is now **operational** with:'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 185,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- ✅ **Performance validation** across all relevant scenarios'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 190,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Status**: operational with extensive optimization'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/final-summary-2025-08-17.md",
      "line": 198,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'I’ve implemented some heavy custom optimization as well as a mixture of coreml. This should be apparent from the readme.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 13,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'I have not yet implemented quantization on the model. Looking for the recommended recommendation in terms of balancing speed vs quality. And maybe instructions on mixing quantization strategies. We want to avoid artifacts and quality drops where possible.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 17,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'We’re supposed to be enabling streaming with smart fallbacks. Since Raycast has a sandboxed node process, accessing specific audio playback strategies have failed, so our current strategy is deployed, the other options like play were often running into gaps between audio packets that cause our audio playback to get a sigterm signal to close the stream.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 19,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'For concurrency, while we’re not grabbing multiple sources of text and trying to run it at the same time. (It doesn’t make too much sense for a user to select multiple different things and try to read back 4 different sources at the same time. That would be like having four people talk at you and the user trying to make sure they heard all relevant four and understand it.) I have considered using ANE for the first bit of streaming while immediately opening up additional generation of the next sequence in parallel on the GPU/Cpu'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 29,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'There is the challenge of keeping streams open for article length text as well as short 1 sentence readback. Especially since the phonemizer has issues with our initial strategy of normalization (100% mismatch of word counts on all relevant lines)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 31,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'And I’m unsure if I have specifically deployed other scheduling/batching optimizations other than what I’ve created. So I’m open to squeezing relevant drop of performance from where I can. Even if that means re architecting our backend to get even more access to underlying metal apis or speed gains that our current process may be dropping. (I’m heavily proficient in most mainstream low level programming languages)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 33,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'I’ll structure the final output as a extensive report with categorized recommendations across model, system, and deployment layers. I’ll let you know once it’s ready.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 69,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Evaluate INT4 on Apple Neural Engine: The M1 Neural Engine excels at 8-bit operations; it has no native 4-bit runtime, but an int4 model could still run via bit-packing or on GPU. You might experiment with an int4 version (perhaps using a custom runtime or the Core ML neural engine in 8-bit mode but compressing weights 2:1 in memory). The speed-up from int4 can be significant if implemented, but expect diminishing returns if the hardware must emulate 4-bit math. A careful A/B test of int8 vs int4 output can determine if any subtle audio artifacts appear (e.g. robotic tones or noise).'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 92,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Fallback Backend Performance: The espeak-based fallback is robust but might not be the fastest. If Misaki remains problematic in Python 3.13, consider a lightweight alternative like pypinyin or Phonemizer (CleanFork) for English/Japanese that might be faster. Since phonemization typically is a small fraction of all relevant latency, this is a minor optimization – but relevant bit counts toward TTFA. You could also run the phonemizer in a separate thread or process overlapping with model inference. For example, start phonemizing the next text segment while the model is generating audio for the current segment.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 105,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Provider Selection by Input Size: Leverage your benchmarking insights to dynamically choose the execution provider based on input complexity. Your recent benchmarks found that using CoreML (CPUAndGPU) is recommended for long-form content, whereas the Neural Engine (all relevant) might shine for shorter inputs'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 117,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '. You could implement logic where for very short texts (a sentence or two), you run with COREML_COMPUTE_UNITS=all relevant (engaging the ANE for ultra-low latency), but for long paragraphs you switch to CPUAndGPU to avoid ANE overhead or memory limits. This “hybrid” approach ensures each request gets the fastest path available.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 119,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: ') is key – one CPU-bound layer can drag down the all relevant inference speed.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 122,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Dual Session Pipeline: As you’ve considered, running two inference sessions in parallel can overlap audio generation for successive segments. For example, Session A (CoreML/ANE) starts generating chunk 1 audio. As soon as chunk 1 audio is partly ready to play, Session B (e.g. on CPU or GPU) begins computing chunk 2. By the time chunk 1 finishes playback, chunk 2 is either implemented or nearly implemented, minimizing any gap. Implementing this requires careful thread management to not overwhelm memory or Neural Engine. Your DualSessionManager scaffold in the code suggests you are heading this direction (concurrent process_segment calls on different providers) – continue to refine this by assigning one session to CoreML and another to CPUExecutionProvider (or even a second CoreML session forced to GPU-only). The M1 Max can handle a CPU inference and an ANE inference concurrently with minimal interference, since they use different cores. Test with various chunk sizes to see if parallel generation actually reduces audible delay.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 129,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Thread Affinity and Async I/O: Outside of the model execution, ensure that other tasks (like file I/O or audio buffering) run asynchronously so they don’t block the main inference thread. FastAPI and uvicorn are asynchronous by nature; take advantage by doing things like streaming response chunks via an async generator while the CPU is free during GPU/ANE processing. The Python GIL won’t block truly parallel native tasks (Core ML runs outside Python), so you can afford to do minor work on the side in Python while waiting for the model. For example, computing MD5 cache keys, normalizing text, or sending partial data to the client can all relevant be implemented concurrently on the event loop.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 130,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Thread Affinity and Async I/O: Outside of the model execution, ensure that other tasks (like file I/O or audio buffering) run asynchronously so they don’t block the main inference thread. FastAPI and uvicorn are asynchronous by nature; take advantage by doing things like streaming response chunks via an async generator while the CPU is free during GPU/ANE processing. The Python GIL won’t block truly parallel native tasks (Core ML runs outside Python), so you can afford to do minor work on the side in Python while waiting for the model. For example, computing MD5 cache keys, normalizing text, or sending partial data to the client can all relevant be implemented concurrently on the event loop.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 130,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Targeted Testing on M1 Max: Since we focus solely on the 64 GB M1 Max, make that your test bed for all relevant optimizations. Use tools like Apple Instruments to profile the app. For instance, Instruments can profile Metal/ANE workloads to confirm if the Neural Engine is saturated or if the GPU is underutilized. This can validate assumptions (e.g., if all relevant vs CPUAndGPU is actually using the ANE cores largely). Also test under realistic conditions: run the Raycast flow with various text lengths (one sentence vs. a full page) and measure end-to-end latency (selection to audio start). It’s good that your system reports metrics at the /status endpoint – you could build a small script to drive the end-to-end test: select text, have Raycast call the API, and time until sound output. This user-centric latency is the true measure of “near real-time.” Optimize for that metric, not just raw inference speed in isolation.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 155,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Conclusion: By applying these model tweaks (smart quantization, potential model downsizing), system-level tunings (largely exploiting M1 Max’s Neural Engine and GPU in parallel), and deployment refinements (smoother streaming and adaptive settings), Kokoro TTS can further approach real-time speech synthesis on your Mac. You’ve already implemented impressive performance gains – e.g. ~3.5 s cold start and 14 ms(!) on cached inputs'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 156,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Apply one-shot or iterative structured pruning to remove all relevant attention heads or convolution channels that contribute least to accuracy. A 20% structured prune can yield a ~20% speedup with minimal audio quality drop.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 200,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Putting It all relevant Together'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 244,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Your Kokoro-ONNX TTS project is already heavily optimized for Apple Silicon, but there are a few additional strategies to ensure near-instant text-to-speech on M-series Macs (like your 64 GB M1 Max). Below are suggestions spanning hardware utilization, model quantization, parallelism, and streaming improvements – all relevant geared to squeeze out relevant drop of performance without sacrificing quality.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 402,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'export KOKORO_COREML_COMPUTE_UNITS=all relevant  # or CPUAndGPU'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 408,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Why? The ML Program format with FastPrediction specialization is optimized for low-latency inference on ANE. Using all relevant compute units taps the Neural Engine (along with CPU/GPU) for high speed, though in practice CPUAndGPU often proved recommended for long-form content to avoid ANE memory limits . You might experiment with all relevant vs. CPUAndGPU – shorter requests may benefit from full ANE usage, whereas very long streams sometimes run more smoothly when limited to CPU+GPU (due to less overhead per chunk) .'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 411,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '•\tTune Memory and Threads for M1 Max – With 64 GB RAM, you have headroom to optimize memory settings. Consider increasing ONNX Runtime’s memory arena if not already (e.g. KOKORO_MEMORY_ARENA_SIZE_MB) so it can pre-allocate a larger pool . This can reduce memory fragmentation and allocation overhead. Likewise, keep an eye on threading: since the Neural Engine doesn’t support multi-process concurrency , you wisely run a single worker process on Apple Silicon. However, within that process ORT can still use multiple threads (for CPU ops or parallel streams). Your loader’s design suggests a dual session manager that can spawn multiple sessions for concurrency on Apple Silicon  . If implemented, this could allow balancing work across ANE and CPU in parallel. For instance, one session could use CoreML (ANE) while another uses CPU or GPU – letting two segments process simultaneously without contending for the Neural Engine. The M1 Max’s 10 CPU cores and 32 GPU cores are quite powerful, so utilizing them for secondary tasks (phoneme preprocessing, or even a second inference session) while the ANE handles the primary audio chunk can increase throughput.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 414,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '•\tFine-Tune Streaming Chunk Size – You’re already streaming audio in ~50 ms PCM chunks for smooth playback , which is a good balance. These tiny chunks ensure low latency (the user hears audio within a few hundred milliseconds of request ) and keep the audio pipeline continuously fed. Monitor if 50 ms is indeed recommended on M1: if you notice gaps, you might decrease chunk duration slightly (e.g. 30 ms) to send smaller packets more frequently. Conversely, if overhead from too many chunks becomes an issue, slightly larger chunks (say 100 ms) could reduce context-switching overhead while still feeling instantaneous. The key is that the next chunk should be ready before the current one finishes playing. Since your pipeline can produce audio faster than real-time, ensure the chunk generation loop is tuned to always stay ahead of playback.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 428,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '•\tPre-buffer to Avoid Underruns – A common cause of gaps is when the playback buffer runs dry waiting for the next audio chunk. To mitigate this, consider buffering a tiny lead before starting playback. For example, you might generate and queue 2–3 chunks (50–150 ms of audio) first, then begin playing. This gives the system a small cushion so network or processing jitter doesn’t cause an audible gap. Your extension already notes “intelligent buffering balances latency vs. quality”  – leveraging that, you could dynamically adjust buffering based on text length. For very short sentences, buffering the all relevant sentence audio (or a large portion) before play might be fine (since all relevant latency is already low). For long paragraphs, stream as you do, but maybe buffer one extra chunk at paragraph boundaries where there might be a slight pause as the next segment loads.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 429,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Bottom Line: You’ve already implemented an excellent job optimizing Kokoro TTS for Apple Silicon – from CoreML acceleration to streaming audio. The suggestions above are incremental improvements: use the int8 model (and possibly mixed precision) for the recommended speed/quality mix, exploit all relevant M1 Max hardware units in parallel (ANE + CPU/GPU), and refine your streaming pipeline to avoid any buffer underruns. By fine-tuning these, you should achieve “near-instant” TTS playback where audio begins in a fraction of a second and runs smoothly to completion. Given your current results (audio starts in 200–500 ms with sub-second latency ), you’re already very close to that suitable. With careful tweaks to chunking and perhaps a dedicated audio output process, those occasional gaps and SIGTERMs will disappear, and the experience will be as if the Mac itself is talking instantly. Good luck, and happy coding!'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 445,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Bottom Line: You’ve already implemented an excellent job optimizing Kokoro TTS for Apple Silicon – from CoreML acceleration to streaming audio. The suggestions above are incremental improvements: use the int8 model (and possibly mixed precision) for the recommended speed/quality mix, exploit all relevant M1 Max hardware units in parallel (ANE + CPU/GPU), and refine your streaming pipeline to avoid any buffer underruns. By fine-tuning these, you should achieve “near-instant” TTS playback where audio begins in a fraction of a second and runs smoothly to completion. Given your current results (audio starts in 200–500 ms with sub-second latency ), you’re already very close to that suitable. With careful tweaks to chunking and perhaps a dedicated audio output process, those occasional gaps and SIGTERMs will disappear, and the experience will be as if the Mac itself is talking instantly. Good luck, and happy coding!'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 445,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Practical system-level refinements that reinforce what’s already been implemented (like memory arenas, quantization, dual sessions).'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 530,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Low-level performance tuning suggestions (e.g., MLProgram, FastPrediction, sequence-tagged PCM streaming) that augment your existing architecture without requiring a implemented rewrite.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 534,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Use of ANE via CoreML\tEmphasizes MLProgram + FastPrediction, and the nuanced trade-off between all relevant vs. CPUAndGPU across short vs. long inputs. Integrate into runtime provider selection heuristics.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 541,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Quantization (INT8, mixed, per-channel, QAT)\tall relevant 3\tFormalize a multi-pass quantization plan: QAT if retraining; per-channel static otherwise; fallback to hybrid INT8/FP16.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 558,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Yes, let’s synthesize this all relevant into one large but deeply extensive report. We want to take the strategies from each review pass and fold those together for a highly optimized TTS using multiple techniques for near instant inference time for our Kokoro TTS backend and Raycast extensions front end.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 613,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'To generate the final consolidated report, could you confirm how you'd like it formatted and implemented?'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 615,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'I'll let you know when the document is ready.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 636,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Kokoro-82M is a lightweight text-to-speech model with 82 million parameters, designed to deliver high-quality speech comparable to larger models while being small and efficient. When deployed via the Kokoro ONNX Runtime backend, it can achieve near real-time performance even on consumer hardware like Apple’s M1 chips. This report synthesizes multiple performance optimization strategies into a unified architecture to attain near-instant inference for the Kokoro TTS backend, as integrated with a Raycast extension front-end. We will focus on accelerating TTS processing end-to-end – from text input to audio output – through model-level optimizations, hardware acceleration, streaming generation, intelligent caching, and concurrent processing techniques. The Raycast extension’s role is primarily to send text input and play the resulting audio, so we will reference expected input/output and streaming capabilities without delving into its internal implementation. Overall, the goal is to minimize latency (aiming for first audio output in a fraction of a second) while maintaining audio quality and system stability.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 643,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'The Kokoro TTS backend is implemented as a FastAPI server exposing a TTS endpoint, with a multi-stage processing pipeline for each request'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 645,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Request Validation and Setup: The API validates input parameters (text length, voice ID, speed, etc.) and ensures the TTS model is loaded and ready'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 648,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Streaming Output: The API supports chunked streaming of audio back to the client. As soon as the first audio chunk is ready, it is sent, followed by subsequent chunks, rather than waiting for the full audio to be generated'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 657,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Response and Cleanup: The client receives either a streaming response (for real-time playback) or a implemented audio file. After responding, the server performs any needed cleanup (clearing buffers, triggering garbage collection) to free memory for the next request'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 661,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '. 3. Optimized Model Loading & Warm-Up: The system is designed to load the ONNX model into memory once at startup and reuse it for all relevant requests, avoiding repeated disk reads. This initialization can take a couple of seconds (to load ~80M parameters and initialize ORT), but it happens asynchronously during server startup so that the first user request doesn’t pay this cost'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 679,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '. The backend can also execute a quick warm-up inference (e.g. generating a short dummy audio) right after loading, to ensure any lazy initializations in ORT or CoreML are implemented before the first real request. After this warm-up, inference calls run at full speed with no further compilation overhead, enabling near-instant responses on the first user request. 4. Parallelization and Threading: On CPU execution, ORT can leverage multiple threads to compute neural network operations in parallel. The Kokoro model’s architecture (which includes transformer layers) benefits from multi-core parallelism. The backend ensures that ORT is configured with an appropriate number of intra-op threads for the hardware. In addition, asynchronous concurrent execution is enabled for different segments of audio (described more in the streaming section) so that multiple parts of the TTS pipeline run in parallel. While the model inference for a single segment primarily relies on ORT’s internal parallelization, the system architecture can handle multiple segments or requests concurrently using Python asyncio and background threads without blocking the main event loop'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 684,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Even with a fast model, waiting for an all relevant sentence or paragraph to be converted to speech can introduce noticeable latency. The Kokoro TTS backend therefore implements a streaming audio pipeline to start delivering audio as soon as possible. Rather than processing a long text as one monolithic input, the text is segmented into smaller chunks (for example, by sentence boundaries or newline separators) during preprocessing'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 688,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '. Internally, these may share threads or use the same model sequentially depending on resource limits, but logically it overlaps the work. For example, while one segment is being processed by the Neural Engine, the CPU can prepare the next segment’s text or begin vocoding the next chunk. The result is that all relevant processing time for multi-sentence input is reduced compared to purely serial generation.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 694,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'First-Chunk Latency: Thanks to streaming, the time-to-first-audio is very low. The system streams the audio for the first segment as soon as it’s ready (often within 200–500 ms on optimized hardware)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 695,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Sequential Audio Assembly: On the client side (or if needed, the server can ensure this), the audio chunks are played in order. The backend ensures that each segment’s audio is properly concatenated or that playback order is correct. If segments were processed truly in parallel, some coordination is needed to stream them in the original text order. In practice, the backend might maintain an index per segment and stream them in sequence once each is implemented, or simply process in order but with overlap. In any case, by the time the first chunk has been sent out, the second is likely already being generated, and so on, creating a continuous flow of speech.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 701,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Benchmark: The benefit of streaming can be quantified by measuring latency vs text length. For example, without streaming, a 5-sentence paragraph might take 5 seconds to respond (only sending audio after full generation). With streaming and parallelization, the user might hear the first sentence in 0.3 seconds, and the all relevant time to deliver all relevant audio might drop to, say, 3 seconds instead of 5. The Kokoro TTS server explicitly targets <500 ms first-byte latency for audio'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 702,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '. In testing, one should measure the time to first audio and the all relevant audio duration vs all relevant processing time. Ideally, the system achieves a real-time factor <1 (meaning faster than the actual audio length) and keeps the initial delay imperceptible. The documentation confirms that with these techniques, the system can stream audio in real-time with under 0.5 s initial delay'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 704,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: ', which dramatically improves user experience. Additionally, concurrent segment processing yields performance gains mostly for longer texts. A good benchmark is to test a long paragraph with streaming on vs off: when streaming is enabled, users will hear speech sooner and the backend can utilize idle time better by parallelizing segments. For fairness, one might measure the end-to-end latency of delivering the all relevant paragraph, but also the subjective latency (time until speech starts). The expectation is that streaming doesn’t reduce the all relevant compute needed (the model still must generate all relevant audio), but it hides a lot of the time by doing work while audio is already playing. In practice, users perceive near instant response because the gap between request and first sound is tiny, even if the full paragraph takes a couple seconds to finish speaking.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 706,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Fast Grapheme-to-Phoneme Conversion: Kokoro supports multiple languages and voices, often using an external phonemizer (like eSpeak via phonemizer_fork) to get phonemes for the text. This can be a bottleneck for long inputs or when the phonemizer is implemented in Python. To address this, an integration of the Misaki G2P engine has been developed, which is a more efficient phonemization system. Misaki (likely implemented in Rust or C++) can convert text to phonemes faster and with potentially better accuracy. The project’s integration plan emphasizes merging Misaki for production and compares its performance with the prior phonemizer solution'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 709,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '. By using Misaki, the text processing latency is reduced, contributing to faster overall TTS. In benchmarks, after implementing Misaki one should measure the time spent in text-to-phoneme for a representative input (e.g., 1000-character text) against the old approach. We expect to see a drop in CPU usage and time for this stage. The plan is to ensure at least equal or better quality, so a quality assessment is implemented alongside performance'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 712,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Minimal Text Normalization: The system performs necessary text normalization (expanding numbers, handling abbreviations, etc.), but this is implemented in a lightweight manner (likely via regex or rule-based replacements) to avoid heavy computations. If the phonemizer fails or is too slow for some reason, the system even has a text fallback mode where it can skip complex processing and feed raw text to the model'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 715,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'By streamlining text preprocessing, the pipeline ensures the front-end is not left waiting on non-neural tasks. In practice, the phonemization and text prep should only take a few milliseconds for short inputs, and maybe tens of milliseconds for longer paragraphs. A good test is to profile the breakdown of time: e.g., in a 1-second all relevant inference, see if text processing is <5% of that. If it dominates, then optimization here (via native code or caching) is necessary. With Misaki integrated and other improvements, we expect phoneme conversion to be fast and reliable, complementing the fast inference to keep the overall latency low.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 719,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '). By combining these caching strategies, the system avoids redundant work and maintains its high performance consistently. The user of the Raycast extension can invoke TTS repeatedly and get fast responses relevant time, not just the first time. And importantly, all relevant this is implemented without manual intervention – the backend transparently handles caching, which is a hallmark of a operational optimization approach.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 772,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '). By combining these caching strategies, the system avoids redundant work and maintains its high performance consistently. The user of the Raycast extension can invoke TTS repeatedly and get fast responses relevant time, not just the first time. And importantly, all relevant this is implemented without manual intervention – the backend transparently handles caching, which is a hallmark of a operational optimization approach.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 772,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Baseline vs Optimized Inference Time: Measure the average time to generate a fixed length of speech (say 5 seconds of audio) using the baseline model (FP16 on CPU) versus the optimized path (INT8 model on ORT with hardware acceleration). This can be implemented with a test script or the provided run_benchmark.py. We expect to see multiple-fold speedups – for example, if baseline was 1× real-time (5s audio in ~5s compute), the optimized path might be 0.2× real-time (5s audio in ~1s compute)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 775,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: ') to see the difference – without streaming, the all relevant audio might only come after a few seconds. This validates the streaming pipeline’s effect on perceived latency.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 785,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Parallel Segment Throughput: For a very long text input (e.g. a paragraph with 5–10 sentences), compare the all relevant processing time when segments are allowed to be processed in parallel vs forced sequential. One way is to artificially enable/disable the parallelism feature and measure end-to-end time. Alternatively, compare actual usage: the server’s logs or status can indicate if multiple segments were synthesized concurrently'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 786,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '. The expectation is that parallel processing should reduce the all relevant time for long inputs, especially on multi-core systems, roughly proportional to the number of segments (with diminishing returns if too many segments saturate hardware). A successful optimization will show nearly linear scaling for a small number of segments (e.g., two sentences synthesized in almost the time of one, if running on different cores).'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 788,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Phonemizer Performance: Benchmark the G2P conversion by timing how long it takes to process a sample text (perhaps 200 characters of mixed content) using the old phonemizer vs the new Misaki integration. This could be implemented by calling the phonemization function directly or via a special mode in the API. We expect to see a reduction in time per character processed. For instance, if phonemizer-fork took 50ms for that text, Misaki might do it in 10–20ms, though actual numbers will vary. Also note CPU usage during this stage – a more efficient G2P might use less CPU, freeing cycles for the model. This benchmark ensures text preprocessing is no longer a bottleneck. Additionally, verify correctness by comparing the phoneme outputs; any differences should be intended improvements (the plan is to also improve phoneme quality, not just speed'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 789,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'all relevant these benchmarks should be documented in a benchmark report for the project. The Kokoro TTS API includes automated benchmarking tools to help with this'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 800,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: ', and to continue smoothly as the rest streams in. We also integrated faster text preprocessing (Misaki G2P) and robust fallbacks, so that the overhead before synthesis is minimal and failure scenarios don’t cause stalls. Finally, we implemented intelligent caching and monitoring: the system avoids redundant work by caching recommended settings and models, periodically tuning itself and cleaning up resources to sustain high performance over time'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/full-chat-convo-on-optimization.md",
      "line": 813,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Status**: Major investigations completed, system operational'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 4,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Root Cause**: CoreML provider has severe initialization issues and hangs on all relevant/CPUAndGPU configurations'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 12,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **CoreML all relevant**: implemented failure - 503 Service Unavailable, server hangs/crashes'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 15,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **CoreML all relevant**: implemented failure - 503 Service Unavailable, server hangs/crashes'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 15,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Chunk generation timing**: Excellent across all relevant sizes (0.003-0.005ms median gaps)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 36,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Steady state performance**: 4-6ms TTFA for all relevant chunk sizes after warmup'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 38,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Memory arena testing**: 2048MB, 3072MB, 4096MB all relevant show similar low memory usage'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 48,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Memory efficiency**: Excellent across all relevant configurations (4-5MB vs 300MB target)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 53,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '4. **Cold Start**: Identified consistent ~4 second cold start penalty across all relevant configurations'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 71,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '### ** Performance Improvements implemented**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 115,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **First request**: ~4 seconds (consistent across all relevant configurations)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 126,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Mitigation**: Session warming and cache optimization implemented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 129,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Recommendation**: Use CPU provider for all relevant production workloads'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 134,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'The system is now operational with the CPU provider configuration, achieving 70% better TTFA than target and excellent memory efficiency.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/investigation-summary-2025-08-17.md",
      "line": 156,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '* ✅ **Core streaming pipeline:** largely implemented with 3.8x TTFA improvement (8371ms → 2188ms)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 30,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '*  **Quantization ready:** Scripts implemented but models not quantized yet'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 34,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '*  **Auto-tuning:** ML-based parameter optimization not implemented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 35,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'export KOKORO_COREML_COMPUTE_UNITS=all relevant    # try: all relevant vs CPUAndGPU'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 142,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '* **Short inputs (≤ 1–2 sentences):** `all relevant` (engage ANE) → lower TTFA.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 149,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '* **TTFA:** request accepted → first audible sample implemented.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 260,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '3. **Provider heuristic (all relevant vs CPUAndGPU)**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 275,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '* *Expect:* `all relevant` wins TTFA on short; `CPUAndGPU` steadier on long; dual session reduces seam gaps.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 278,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '* **Reduce TTFA:** switch provider to `all relevant` for primers; enable primer micro‑cache.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 306,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '| P0 | Provider optimization | High | Low | ✅ implemented |'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 319,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '| P1 | INT8 quantization | High | Medium |  Ready |'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 321,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '| P1 | ONNX graph optimization | Medium | Low |  Ready |'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 322,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '*  Enable **per‑channel INT8**; export `.ort`; set memory arena 2–4 GB. (Scripts ready)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 334,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '* ✅ Provider heuristic (all relevant vs CPUAndGPU by input length).'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 340,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**additional**  **PARTIALLY READY**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 344,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '*  Mixed‑precision layer allowlist; optional QAT on sensitive blocks. (Scripts ready)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 346,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'export KOKORO_COREML_COMPUTE_UNITS=all relevant          # try CPUAndGPU for long text'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 427,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'return {\"ep\": \"coreml\", \"compute_units\": \"all relevant\"}'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/kokoro-tts-optimization-blueprint.md",
      "line": 437,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'This document summarizes the extensive optimizations implemented specifically for Apple Silicon M-series Macs to maximize performance of the Kokoro ONNX TTS pipeline. The optimizations span hardware detection, CoreML provider configuration, dual-session management, memory optimization, and production performance tuning.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/m-series-mac-optimizations-summary.md",
      "line": 12,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Key Achievement:** implemented **5.5-6.9ms TTFA** (145x better than 500ms target) with meets requirements real-time synthesis (RTF: 0.000) on M1 Max.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/m-series-mac-optimizations-summary.md",
      "line": 14,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Short inputs (≤1-2 sentences)**: `all relevant` compute units (engage ANE) → lower TTFA'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/m-series-mac-optimizations-summary.md",
      "line": 112,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Model File:** `optimized_models/kokoro-v1.0.int8-graph-opt.onnx` (production deployed)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/m-series-mac-optimizations-summary.md",
      "line": 250,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '### ✅ Implemented Optimizations:'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/m-series-mac-optimizations-summary.md",
      "line": 380,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- ✅ **Stability**: Consistent performance across all relevant trials'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/m-series-mac-optimizations-summary.md",
      "line": 396,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'The M-series Mac optimizations have implemented **exceptional performance** through systematic hardware-aware optimization:'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/m-series-mac-optimizations-summary.md",
      "line": 441,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **operational stability**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/m-series-mac-optimizations-summary.md",
      "line": 446,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Status:** ✅ **MAJOR SUCCESS - 145x TTFA improvement implemented!**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 6,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Your Kokoro TTS system has implemented **exceptional performance** through systematic optimization. The system now delivers **near-instantaneous** text-to-speech with performance that far exceeds the original targets.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 12,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- ✅ **Production stability**: all relevant core systems optimized and stable'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 18,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '| **all relevant + 512MB** | 7.2 | 329.8 | 0.000 |  High memory |'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 38,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '### **1. Model-Level Optimizations** ✅ **implemented**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 46,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '### **2. Hardware-Specific Optimizations** ✅ **implemented**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 51,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '### **3. System Configuration** ✅ **implemented**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 56,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Caching Systems**: Phoneme and inference caching ready'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 59,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **all relevant gates passing** ✅'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 69,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Status**: Systems ready but underutilized'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 109,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- ✅ **TTFA ≤ 500ms**: implemented 5.5-6.9ms (145x better)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 122,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- ✅ **Memory ≤ 300MB**: implemented for short text (70.9MB)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 124,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- ✅ **Production ready**: all relevant critical systems optimized'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 131,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- ✅ **Production ready**: all relevant critical systems optimized'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 131,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '1. **Deploy current configuration**: Already optimized and operational'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 138,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Your Kokoro TTS system has implemented **exceptional performance** through systematic optimization. The system now delivers:'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 165,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **operational stability**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 170,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'The optimization journey has been **highly successful**, achieving performance that far exceeds the original targets. The system is now ready for production use with confidence.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 172,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Overall Status:  EXCELLENT PERFORMANCE implemented!**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-results-summary.md",
      "line": 174,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- [x] **Deploy INT8 quantization:** Use ready scripts to quantize production model'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 122,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Status:** ✅ DEPLOYED - Graph optimizations provide significant real-world performance gains'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 134,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- Model path: `optimized_models/kokoro-v1.0.int8-graph-opt.onnx` (production deployed)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 143,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Recommendation:** Switch to CPU provider for all relevant text lengths'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 163,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Evidence:** Enhanced warming implemented in `fast_init.py` with multi-stage approach:'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 166,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Evidence:** Implemented `KOKORO_DISABLE_MEMORY_MGMT` flag in `coreml.py`:'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 173,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Status:** ✅ COMPLETED - Cache clearing endpoint and benchmark integration implemented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 201,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- Test different CoreML compute unit configurations (all relevant vs CPUAndGPU vs CPUOnly)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 216,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'KOKORO_COREML_COMPUTE_UNITS=all relevant python scripts/run_bench.py --preset=short --stream --trials=3 --verbose'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 221,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **CoreML all relevant**: implemented failure - 503 Service Unavailable, server hangs/crashes'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 227,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **CoreML all relevant**: implemented failure - 503 Service Unavailable, server hangs/crashes'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 227,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Root Cause**: CoreML provider has severe initialization issues and hangs on all relevant/CPUAndGPU configurations'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 231,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Chunk generation timing**: Excellent across all relevant sizes (0.003-0.005ms median gaps)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 254,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Steady state performance**: 4-6ms TTFA for all relevant chunk sizes after warmup'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 256,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Memory arena testing**: 2048MB, 3072MB, 4096MB all relevant show similar low memory usage'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 280,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Provider Selection Logic**: Working correctly across all relevant text lengths'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 300,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Cold Start Pattern**: Consistent ~3-4 second penalty across all relevant text lengths'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 304,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Chunk Generation**: Excellent across all relevant concurrency levels (0.003-0.004ms median gaps)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 327,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **CoreML Provider issues:**  Severe performance degradation across all relevant text lengths'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 344,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Model optimization:** ✅ **implemented** - INT8 quantization + graph optimization deployed'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 346,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Pipeline optimization:** ✅ **implemented** for CPU provider,  CoreML needs investigation'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 349,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- CPU provider: Consistent sub-15ms performance across all relevant trials'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 350,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Production ready:** ✅ For CPU provider use cases,  CoreML needs optimization'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 353,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **CPU Provider dramatically outperforms CoreML for all relevant text lengths**: 10.6ms vs 4422ms TTFA p95'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 357,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **CPU provider consistent performance**: 4.7-10.6ms TTFA across all relevant trials (no cold start penalty)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 359,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Excellent chunk generation performance across all relevant providers:**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 366,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **Evidence**: all relevant benchmark results show sub-millisecond median gaps between chunks'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 371,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Final Solution Implemented:**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/optimization-tracker.md",
      "line": 410,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Status**: ✅ implemented and Tested'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/persistent-daemon-implementation.md",
      "line": 5,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Successfully implemented a persistent audio daemon architecture that eliminates the need for Raycast to spawn its own daemon for each request, significantly reducing time-to-audio and simplifying the extension logic.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/persistent-daemon-implementation.md",
      "line": 9,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- Created test script to verify all relevant dependencies work correctly'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/persistent-daemon-implementation.md",
      "line": 34,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **After**: Single daemon process shared across all relevant requests'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/persistent-daemon-implementation.md",
      "line": 63,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Tests the implemented flow from Raycast to persistent daemon'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/persistent-daemon-implementation.md",
      "line": 113,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Successfully implemented and tested weights-only INT8 quantization for the Kokoro TTS model. The quantization implemented a **11.3% size reduction** while maintaining compatibility with both CoreML and CPU execution providers.'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quantization-test-results.md",
      "line": 9,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '✅ **Implemented safe input generation** - Fixed vocab bounds detection to prevent out-of-bounds Gather errors'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quantization-test-results.md",
      "line": 15,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- Implemented vocab bounds detection (178 tokens)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quantization-test-results.md",
      "line": 76,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '##  Quick Actions (Ready to Deploy)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 6,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'export KOKORO_COREML_COMPUTE_UNITS=CPUAndGPU  # Better than all relevant for memory efficiency'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 11,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# CoreML all relevant/CPUAndGPU: implemented failure (503 errors, server crashes)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 24,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# CoreML all relevant/CPUAndGPU: implemented failure (503 errors, server crashes)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 24,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# CoreML all relevant: implemented failure - 503 Service Unavailable, server hangs/crashes'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 33,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# CoreML all relevant: implemented failure - 503 Service Unavailable, server hangs/crashes'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 33,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Provider selection logic working correctly across all relevant text lengths:'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 44,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Cold start pattern: Consistent ~3-4 second penalty across all relevant text lengths'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 49,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'KOKORO_COREML_COMPUTE_UNITS=all relevant python scripts/run_bench.py --preset=short --stream --trials=3 --verbose'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 58,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Chunk generation timing: Excellent across all relevant sizes (0.003-0.005ms median gaps)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 77,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Steady state performance: 4-6ms TTFA for all relevant chunk sizes after warmup'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 79,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Phoneme and inference caching are ready but underutilized'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 86,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Memory efficiency: Excellent across all relevant configurations (4-5MB vs 300MB target)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 102,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '# Chunk generation: Excellent across all relevant concurrency levels (0.003-0.004ms median gaps)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 113,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'export KOKORO_COREML_COMPUTE_UNITS=CPUAndGPU  # Better memory efficiency than all relevant'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 158,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'KOKORO_COREML_COMPUTE_UNITS=all relevant        # Uses more memory'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 174,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **CoreML all relevant/CPUAndGPU**: implemented failure (503 errors, server crashes)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 191,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- **CoreML all relevant/CPUAndGPU**: implemented failure (503 errors, server crashes)'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 191,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- ✅ **TTFA optimization implemented (145x improvement!)**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 229,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '2. **Provider selection optimization**: CPU outperforms CoreML across all relevant text lengths'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 238,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '2. **additional caching strategies**: Ready but underutilized'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 256,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- ✅ **operational configuration**: Optimized for 64GB M1 Max'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 299,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '**Overall Status:  EXCELLENT PERFORMANCE implemented!**'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/quick-reference.md",
      "line": 305,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '- all relevant processing methods showing 0.0ms TTFA'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/ttfa-measurement-bug-fix.md",
      "line": 13,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: '## Solution Implemented'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/ttfa-measurement-bug-fix.md",
      "line": 30,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    },
    {
      "gate": "documentation",
      "type": "documentation_warning",
      "message": "Unfounded achievement claim detected: 'Removed all relevant placeholder `update_fast_path_performance_stats` calls from text processing functions in:'",
      "file": "/Users/drosebrook/Desktop/Projects/kokoro-onnx-raycast-api/docs/optimization/ttfa-measurement-bug-fix.md",
      "line": 33,
      "rule": "UNFOUNDED_ACHIEVEMENT",
      "suggested_fix": "Verify claim with evidence or use more accurate language"
    }
  ],
  "violations": [
    {
      "gate": "code_freeze",
      "type": "new_file_during_freeze",
      "message": "New source files staged during code freeze: scripts/clean_docs.py",
      "suggestion": "Avoid introducing new modules during freeze. Use exceptions for critical hotfixes only.",
      "severity": "block"
    },
    {
      "gate": "code_freeze",
      "type": "large_addition_during_freeze",
      "message": "Large addition detected: +16073 lines staged (budget 500)",
      "suggestion": "Split the change into smaller, reviewable patches during freeze.",
      "severity": "block"
    }
  ],
  "waivers": {
    "active": 0,
    "applied": 0,
    "details": []
  },
  "performance": {
    "total_execution_time_ms": 20420,
    "gate_timings": {
      "duplication": 146,
      "naming": 483,
      "code_freeze": 498,
      "god_objects": 553,
      "documentation": 19816,
      "hidden-todo": 19834
    }
  }
}