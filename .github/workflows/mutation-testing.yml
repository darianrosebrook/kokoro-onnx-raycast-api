name: Mutation Testing

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'api/**'
      - 'tests/**'
      - 'scripts/run_mutation_tests.py'
  schedule:
    # Run weekly mutation testing
    - cron: '0 2 * * 1'  # Monday 2 AM UTC

jobs:
  mutation-testing:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov mutmut  # Install mutation testing tools

      - name: Run baseline tests
        run: |
          python -m pytest tests/ --tb=short --maxfail=5 -x
          if [ $? -ne 0 ]; then
            echo "❌ Baseline tests failed, skipping mutation testing"
            exit 1
          fi

      - name: Run mutation testing
        id: mutation
        run: |
          echo "🧬 Running mutation testing..."
          python scripts/run_mutation_tests.py
          exit_code=$?

          # Export results for other jobs
          echo "mutation_score=$(jq -r '.mutation_score' mutation-report.json)" >> $GITHUB_OUTPUT
          echo "killed_mutations=$(jq -r '.killed_mutations' mutation-report.json)" >> $GITHUB_OUTPUT
          echo "total_mutations=$(jq -r '.total_mutations' mutation-report.json)" >> $GITHUB_OUTPUT

          exit $exit_code
        continue-on-error: true

      - name: Upload mutation reports
        uses: actions/upload-artifact@v3
        with:
          name: mutation-reports
          path: |
            mutation-report.json
            mutation-report.html
            .caws/mutation-trends.json

      - name: Comment PR with mutation results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('mutation-report.json', 'utf8'));

            const score = (results.mutation_score * 100).toFixed(1);
            const killed = results.killed_mutations;
            const total = results.total_mutations;
            const survived = results.survived_mutations;

            const trend = results.trend_analysis || {};
            let trendMessage = '';
            if (trend.historical_runs >= 3) {
              const direction = trend.score_trend?.direction;
              if (direction === 'improving') {
                trendMessage = ' 📈 Score trending upward';
              } else if (direction === 'declining') {
                trendMessage = ' 📉 Score trending downward';
              }
            }

            const body = `## 🧬 Mutation Testing Results

**Score: ${score}%** (${killed}/${total} mutations killed)
**Survived:** ${survived} mutations
**Timeouts:** ${results.timeout_mutations || 0}
**Errors:** ${results.error_mutations || 0}

${trendMessage}

### Key Findings:
${survived > killed ? '- ⚠️ More survived than killed mutations - consider adding test cases' : '- ✅ Good mutation kill rate'}
${results.timeout_mutations > 0 ? `- ⏱️ ${results.timeout_mutations} mutations timed out` : ''}
${results.equivalent_mutations > 0 ? `- 🎯 ${results.equivalent_mutations} equivalent mutations detected` : ''}

[📊 View detailed report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Check mutation score threshold
        run: |
          score=$(jq -r '.mutation_score' mutation-report.json)
          threshold=0.7  # 70% minimum score

          if (( $(echo "$score < $threshold" | bc -l) )); then
            echo "❌ Mutation score $score below threshold $threshold"
            echo "failure_reason=mutation_score_below_threshold" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "✅ Mutation score $score meets threshold $threshold"
          fi

  mutation-regression-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: mutation-testing

    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: base

      - name: Checkout head branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          path: head

      - name: Compare mutation scores
        run: |
          # This would compare mutation scores between base and head branches
          # For now, just check if the current score is reasonable
          score=${{ needs.mutation-testing.outputs.mutation_score }}
          if (( $(echo "$score < 0.5" | bc -l) )); then
            echo "⚠️ Very low mutation score detected: $score"
            echo "This might indicate significant test coverage issues"
          fi
